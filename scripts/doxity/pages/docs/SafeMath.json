{"author":"Open Zeppelin","title":"Safe Math Operations","fileName":"/contracts/SafeMath.sol","name":"SafeMath","abi":[],"opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x0 JUMPI JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x16 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x0 JUMP STOP LOG1 PUSH6 0x627A7A723058 SHA3 PUSH19 0xFA51044CC56E8F069349442786C6EA2945DBA 0xea 0x5f SLT MSTORE8 0xd8 0xbf 0xd6 0xa8 0xad 0xa8 0xcb PUSH27 0x2900000000000000000000000000000000000000000000000000 ","source":"pragma solidity ^0.4.8;\n\n/// @title Safe Math Operations\n/// @author Open Zeppelin\n\nlibrary SafeMath {\n\n  function assert(bool assertion) internal {\n    if (!assertion) {\n      throw;\n    }\n  }\n\n  function safeSub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n  function safeMul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n}\n","abiDocs":[]}
