'use strict';

var Command = require('ronin').Command;
var IpfsRepo = require('ipfs-repo');
var Ipfs = require('../../core');
var fsBlobStore = require('fs-blob-store');
var utils = require('../utils');

module.exports = Command.extend({
  desc: 'Initialize a local IPFS node',

  options: {
    bits: {
      type: 'number',
      alias: 'b',
      default: '2048',
      desc: 'Number of bits to use in the generated RSA private key (defaults to 2048)'
    },
    force: {
      alias: 'f',
      type: 'boolean',
      desc: 'Overwrite existing config (if it exists)'
    },
    'empty-repo': {
      alias: 'e',
      type: 'boolean',
      desc: "Don't add and pin help files to the local storage"
    }
  },

  run: function run(bits, force, empty) {
    var path = utils.getRepoPath();

    var repo = new IpfsRepo(path, {
      stores: fsBlobStore
    });

    var ipfs = new Ipfs(repo);
    ipfs.init({
      bits: bits,
      force: force,
      emptyRepo: empty
    }, function (err, res) {
      if (err) {
        console.error(err.toString());
        process.exit(1);
      }
    });
  }
});