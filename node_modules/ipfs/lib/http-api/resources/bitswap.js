'use strict';

var boom = require('boom');

var parseKey = require('./block').parseKey;

exports = module.exports;

exports.wantlist = function (request, reply) {
  var list = void 0;
  try {
    list = request.server.app.ipfs.bitswap.wantlist();
  } catch (err) {
    return reply(boom.badRequest(err));
  }

  reply({
    Keys: list
  });
};

exports.stat = function (request, reply) {
  var stats = void 0;
  try {
    stats = request.server.app.ipfs.bitswap.stat();
  } catch (err) {
    return reply(boom.badRequest(err));
  }

  reply({
    BlocksReceived: stats.blocksReceived,
    Wantlist: stats.wantlist,
    Peers: stats.peers,
    DupBlksReceived: stats.dupBlksReceived,
    DupDataReceived: stats.dupDataReceived
  });
};

exports.unwant = {
  // uses common parseKey method that returns a `key`
  parseArgs: parseKey,

  handler: function handler(request, reply) {
    reply(boom.badRequrest(new Error('Not implemented yet')));
  }
};